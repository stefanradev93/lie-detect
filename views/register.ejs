<% include partials/header %>

<body class="main">
  <div class="wrap">

    <!-- Explanation -->
    <div class="ui stackable container">
      <div class="ui stackable grid container center aligned">
        <div class="one column row">
          <div class="column">
            <h1 class="ui inverted header">
              Beschreibung des Experiments
            </h1>
            <div class="ui left aligned raised padded text segment" id="info">
              <p>In der folgenden	Studie	werden	Sie	gelegentlich aufgefordert, entweder zu lügen oder aber die Wahrheit zu sagen. Das Ziel ist es, bei Ihren Lügen nicht ertappt zu werden. Je häufiger Ihnen das gelingt, desto mehr Punkte erhalten Sie.</p>
              <p>Sie werden zunächst aufgefordert, auf einer Skala anzugeben, wie sehr bestimmte Aussagen auf Sie zutreffen.</p>
              <p>Ein Beispiel:</p>
              <p><em>Ich bin offen gegenüber neuen Erfahrungen.</em></p>
              <p>Sie werden nach Angabe Ihrer Antwort zufällig dann entweder der Lügen- oder aber der Wahrheitsbedingung zugeordnet.</p>
              <p>Wenn Sie der Aussage zugestimmt haben, Sie also offen gegenüber neuen Erfahrungen sind, und in der Wahrheitsbedingung sind, dann werden Sie aufgefordert, die Aussage "Ich bin offen gegnüber neuen Erfahrungen" zu sprechen.</p>
              <p>Wenn Sie der Aussage zugestimmt haben, nun aber zufällig in der Lügenbedingung sind, so werden Sie aufgefordert, z. B. die folgende Aussage zu sprechen: "Ich meide es, neue Erfahrungen zu machen". Diese Aussage entspräche dann einer Lüge.</p>
              <p>Sie entscheiden immer, wann Sie mit der Aufnahme Ihrer Antwort beginnen möchten. Sobald Sie auf <strong>Aufnahme starten</strong> klicken, verschwindet die Aussage und Sie können mit dem Sprechen beginnen.</p>
              <p>Die Aufnahme stoppt automatisch nach wenigen Sekunden und die Studie wird fortgeführt. </p>
              <p>Nach jeder gesprochenen Aussage wird ein Algorithmus versuchen zu erkennen, ob Sie die Wahrheit gesprochen haben, oder aber gelogen haben. Sie bekommen dann unmittelbar Rückmeldung. Sie erhalten immer einen Punkt, wenn der Algorithmus entscheidet, dass Ihre Aussage der <strong>Wahrheit</strong> entspricht. Je glaubwürdiger Sie also sind, desto höher Ihre endgültige Punktzahl.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="ui stackable container">
      <div class="ui stackable grid container center aligned">
        <div class="one column row">
          <div class="column">
            <h1 class="ui inverted header">
              Demografische Daten
            </h1>
            <div class="ui raised padded text segment">
            <form class="ui form" method="POST" action="/register">
              <div class="two fields">
                <div class="field">
                  <label>Alter</label>
                  <input name="age" placeholder="Alter" type="text" pattern="\d*" required>
                </div>
                <div class="field">
                  <label>Beruf</label>
                  <input name="education" placeholder="z.B. Student" type="text" required>
                </div>
              </div>
              <div class="two fields">
                <div class="field">
                  <label>Geschlecht</label>
                  <div class="ui selection dropdown">
                    <input name="gender" type="hidden" value="2">
                    <i class="dropdown icon"></i>
                    <div class="default text">Keine Angabe</div>
                    <div class="menu">
                      <div class="item" data-value="0">Weiblich</div>
                      <div class="item" data-value="1">Männlich</div>
                      <div class="item" data-value="2">Keine Angabe</div>
                    </div>
                  </div>
                </div>
                <div class="field">
                  <label>Muttersprache</label>
                  <div class="ui selection dropdown">
                    <input name="language" type="hidden" value="1">
                    <i class="dropdown icon"></i>
                    <div class="default text">Deutsch</div>
                    <div class="menu">
                      <div class="item" data-value="1">Deutsch</div>
                      <div class="item" data-value="0">Andere</div>
                    </div>
                  </div>
                </div>
              </div>
              <button class="ui right labeled icon blue button" type="submit">
                <i class="right arrow icon"></i>
                Weiter
              </button>
            </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
	
	<!-- Modal window -->
	<div class="ui modal rec-test">
		<div class="ui stackable grid container center aligned">
			<div class="row">
				<div class="sixteen wide column">
					<br>
					<div class="ui raised padded text container">
						<p>Bitte Klicken Sie auf "Testaufnahme Starten" und erlauben Sie die Mikrofonaufnahme für die Dauer des Experiments. Wenn die Aufnahme erfolgreich ist, können Sie loslegen. </p>
					</div>
				</div>
			</div>
			<div class="row">
      			<div class="sixteen wide column">
					<div class="ui raised container">
					  <div class="ui container">
						<div id="siri-container">
						  <!-- Wave animation will play here -->
						</div>
					  </div>
					</div>
				</div>
			</div>
		</div>
		<div id="test-trigger" class="ui bottom attached blue button">
			<i class="unmute icon"></i>
			Testaufnahme Starten
		</div>
	</div>
	
	
<script type="text/javascript" src="javascripts/siriwave.js"></script>
<script type="text/javascript" src="javascripts/RecordRTC.min.js"></script>
<script type="text/javascript">
	
 // Activate dropdown
 $('.ui.dropdown').dropdown();
	
// --- Recorder Tester --- //
const RecordingTester = (function() {
	
  let siriWave = new SiriWave({
		container: document.getElementById('siri-container'),
		width: 200,
		height: 100,
		speed: 0.02,
		color: '#d9dde2',
		frequency: 1
  });
  let recorder = null;
  let mediaStream = null;
  const REC_DURATION = 2 * 1000;
	
  const captureUserMedia = function(successCallback) {
    // Initializes getUserMedia
    let session = {
        audio: true,
        video: false
    };
	// Handle compatibilitty	
	navigator.getUserMedia = (
    navigator.getUserMedia ||
    navigator.webkitGetUserMedia ||
    navigator.mozGetUserMedia ||
    navigator.msGetUserMedia);
		
	if (typeof navigator.mediaDevices.getUserMedia === 'undefined') {
    	navigator.getUserMedia(session, successCallback, (error)=> {
        alert('Die Aufnahme konnte nicht gestartet werden. Bitte, stellen Sie sicher, dass Sie die Mikrofonaufnahme im Browser erlaubt haben und versuchen Sie erneut.');
		window.location = '/';
        console.error(error);
    	});
	} 
	else {
    	navigator.mediaDevices.getUserMedia(session).then(successCallback).catch((error) => {
        alert('Die Aufnahme konnte nicht gestartet werden. Bitte, stellen Sie sicher, dass Sie die Mikrofonaufnahme im Browser erlaubt haben und versuchen Sie erneut.');
		window.location = '/';
        console.error(error);
    	});
	}
  };
	
   const record = function(onTimeout)  {
      /*
      Creates a recorder and a stream, and starts recoridng
      Accepts a callback to execute on recorder timeout
       */
       captureUserMedia(function(stream) {
           // Initialize stream and recorder
           mediaStream = stream;
           recorder = RecordRTC(stream, {
             type: 'audio',
             recorderType: StereoAudioRecorder,
             mimeType: 'audio/wav'
           });
           // Set duration of recording
           recorder.setRecordingDuration(REC_DURATION).onRecordingStopped(onTimeout);
           // Start recorder
           recorder.startRecording();
       });
  };
        
  // Set event listener on test button
  $('#test-trigger').on("click", function() {
	 // Make container visible 
	 $('#siri-container').css("visibility", 'visible');
     // Disable record button
     $('#test-trigger').toggleClass("disabled");
	// Start wave
    siriWave.start();
	// Record
	record( function(){ $('.ui.modal.rec-test').modal('hide'); siriWave.stop(); } );
  });	
 
})();
	
// Start after 1 second
setTimeout( () => {$('.ui.modal.rec-test').modal({closable: false}).modal('show'); }, 1000);
	
</script>

<% include partials/footer %>
